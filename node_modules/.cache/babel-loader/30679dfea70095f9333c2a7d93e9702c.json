{"remainingRequest":"/home/shankar/algorithm-visualizer/node_modules/babel-loader/lib/index.js!/home/shankar/algorithm-visualizer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/shankar/algorithm-visualizer/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/shankar/algorithm-visualizer/src/views/AStar-pathfinder.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/shankar/algorithm-visualizer/src/views/AStar-pathfinder.vue","mtime":1618576308824},{"path":"/home/shankar/algorithm-visualizer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/shankar/algorithm-visualizer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/shankar/algorithm-visualizer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/shankar/algorithm-visualizer/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJBc3RhclBhdGhmaW5kZXIiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBncmlkOiBbWzAsIDAsIDAsIDEsIDAsIDAsIDEsIDBdLCBbMCwgMCwgMSwgMCwgMCwgMCwgMCwgMF0sIFsxLCAwLCAwLCAxLCAxLCAwLCAxLCAwXSwgWzAsIDEsIDAsIDEsIDAsIDAsIDAsIDBdLCBbMCwgMCwgMCwgMCwgMCwgMSwgMSwgMV0sIFsxLCAwLCAxLCAwLCAwLCAwLCAwLCAwXSwgWzEsIDEsIDAsIDAsIDAsIDEsIDAsIDBdLCBbMCwgMCwgMCwgMCwgMCwgMSwgMCwgMF1dLAogICAgICBzdGFydDogWzAsIDBdLAogICAgICBlbmQ6IFs3LCAwXSwKICAgICAgcHJpb3JpdHlxdWV1ZTogW10sCiAgICAgIHNjb3JlczogW10sCiAgICAgIHBhdGhzOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGZpbGxwYXRoYW5kc2NvcmU6IGZ1bmN0aW9uIGZpbGxwYXRoYW5kc2NvcmUoKSB7CiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5ncmlkLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdmFyIHRlbXAgPSBbXTsKCiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB0aGlzLmdyaWRbMF0ubGVuZ3RoOyBqKyspIHsKICAgICAgICAgIHRlbXAucHVzaCg1MDAwMDAwKTsKICAgICAgICB9CgogICAgICAgIHRoaXMuc2NvcmVzLnB1c2godGVtcCk7CiAgICAgIH0KCiAgICAgIGZvciAoaSA9IDA7IGkgPCB0aGlzLmdyaWQubGVuZ3RoOyBpKyspIHsKICAgICAgICB0ZW1wID0gW107CgogICAgICAgIGZvciAoaiA9IDA7IGogPCB0aGlzLmdyaWRbMF0ubGVuZ3RoOyBqKyspIHsKICAgICAgICAgIHRlbXAucHVzaChbbnVsbCwgbnVsbF0pOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5wYXRocy5wdXNoKHRlbXApOwogICAgICB9CgogICAgICB0aGlzLmZpbmRpbmcoKTsKICAgIH0sCiAgICBwb3Bwcmlvcml0eXF1ZXVlOiBmdW5jdGlvbiBwb3Bwcmlvcml0eXF1ZXVlKCkgewogICAgICB2YXIgdmFsID0gdGhpcy5wcmlvcml0eXF1ZXVlWzBdOyAvL2NvbnNvbGUubG9nKHRoaXMucHJpb3JpdHlxdWV1ZSk7CgogICAgICB2YXIgaW5kZXggPSAwOwogICAgICB2YXIgZWw7CgogICAgICBmb3IgKHZhciBpID0gMTsgaSA8IHRoaXMucHJpb3JpdHlxdWV1ZS5sZW5ndGg7IGkrKykgewogICAgICAgIGVsID0gdGhpcy5wcmlvcml0eXF1ZXVlW2ldOwoKICAgICAgICBpZiAoZWxbMF0gPCB2YWxbMF0pIHsKICAgICAgICAgIHZhbCA9IGVsOwogICAgICAgICAgaW5kZXggPSBpOwogICAgICAgIH0gZWxzZSBpZiAoZWxbMF0gPT0gdmFsWzBdICYmIGVsWzFdIDwgdmFsWzFdKSB7CiAgICAgICAgICB2YWwgPSBlbDsKICAgICAgICAgIGluZGV4ID0gaTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHRoaXMucHJpb3JpdHlxdWV1ZS5zcGxpY2UoaW5kZXgpOwogICAgICByZXR1cm4gdmFsOwogICAgfSwKICAgIGJhY2t0cmFjdDogZnVuY3Rpb24gYmFja3RyYWN0KCkgewogICAgICB2YXIgaSwgajsKICAgICAgaSA9IHRoaXMuZW5kWzBdOwogICAgICBqID0gdGhpcy5lbmRbMV07CiAgICAgIHZhciB0aSwgdGo7CiAgICAgIHRoaXMuZ3JpZFt0aGlzLnN0YXJ0WzBdXVt0aGlzLnN0YXJ0WzFdXSA9IDI7CgogICAgICB3aGlsZSAoaSAhPSB0aGlzLnN0YXJ0WzBdICYmIGogIT0gdGhpcy5zdGFydFsxXSkgewogICAgICAgIHRoaXMuZ3JpZFtpXVtqXSA9IDI7CiAgICAgICAgdGkgPSB0aGlzLnBhdGhzW2ldW2pdWzBdOwogICAgICAgIHRqID0gdGhpcy5wYXRoc1tpXVtqXVsxXTsKICAgICAgICBpID0gdGk7CiAgICAgICAgaiA9IHRqOwogICAgICB9CgogICAgICB0aGlzLmdyaWRbaV1bal0gPSAyOwogICAgfSwKICAgIGdldGRpc3RhbmNlOiBmdW5jdGlvbiBnZXRkaXN0YW5jZShjdXIpIHsKICAgICAgdmFyIGEgPSBjdXJbMF07CiAgICAgIHZhciBiID0gY3VyWzFdOwogICAgICB2YXIgZCA9IDA7CgogICAgICBpZiAoYSA+IHRoaXMuZW5kWzBdKSB7CiAgICAgICAgZCArPSBhIC0gdGhpcy5lbmRbMF07CiAgICAgIH0gZWxzZSB7CiAgICAgICAgZCArPSB0aGlzLmVuZFswXSAtIGE7CiAgICAgIH0KCiAgICAgIGlmIChiID4gdGhpcy5lbmRbMV0pIHsKICAgICAgICBkICs9IGIgLSB0aGlzLmVuZFsxXTsKICAgICAgfSBlbHNlIHsKICAgICAgICBkICs9IHRoaXMuZW5kWzFdIC0gYjsKICAgICAgfSAvL2NvbnNvbGUubG9nKGEsIGIsIGQpOwoKCiAgICAgIHJldHVybiBkOwogICAgfSwKICAgIC8vIHJldHVybiBNYXRoLmFicyhhIC0gdGhpcy5lbmRbMF0pICsgTWF0aC5hYnMoYiAtIHRoaXMuZW5kWzFdKTsKICAgIGZpbmRpbmc6IGZ1bmN0aW9uIGZpbmRpbmcoKSB7CiAgICAgIHZhciBpbml0aWFsX2Rpc3RhbmNlID0gdGhpcy5nZXRkaXN0YW5jZSh0aGlzLnN0YXJ0KTsKICAgICAgdGhpcy5wcmlvcml0eXF1ZXVlLnB1c2goW2luaXRpYWxfZGlzdGFuY2UsIDAsIHRoaXMuc3RhcnRbMF0sIHRoaXMuc3RhcnRbMV1dKTsKICAgICAgdmFyIGN1cjsKICAgICAgdmFyIGksIGo7CiAgICAgIHZhciBkaXM7CgogICAgICB3aGlsZSAodGhpcy5wcmlvcml0eXF1ZXVlLmxlbmd0aCAhPSAwKSB7CiAgICAgICAgY3VyID0gdGhpcy5wb3Bwcmlvcml0eXF1ZXVlKCk7CiAgICAgICAgaSA9IGN1clsyXTsKICAgICAgICBqID0gY3VyWzNdOwogICAgICAgIGNvbnNvbGUubG9nKGksIGosIHRoaXMucHJpb3JpdHlxdWV1ZS5sZW5ndGgpOwoKICAgICAgICBpZiAoaSA9PSB0aGlzLmVuZFswXSAmJiBqID09IHRoaXMuZW5kWzFdKSB7CiAgICAgICAgICB0aGlzLmJhY2t0cmFjdCgpOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgfQoKICAgICAgICBpZiAodGhpcy5zY29yZXNbaV1bal0gPCBjdXJbMV0pIHsKICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBpZiAoaSA+IDApIHsKICAgICAgICAgICAgY29uc29sZS5sb2coMSk7CgogICAgICAgICAgICBpZiAoY3VyWzFdICsgMSA8IHRoaXMuc2NvcmVzW2kgLSAxXVtqXSAmJiB0aGlzLmdyaWRbaSAtIDFdW2pdICE9IDEpIHsKICAgICAgICAgICAgICBkaXMgPSB0aGlzLmdldGRpc3RhbmNlKFtpIC0gMSwgal0pOwogICAgICAgICAgICAgIHRoaXMuc2NvcmVzW2kgLSAxXVtqXSA9IGN1clsxXSArIDE7CiAgICAgICAgICAgICAgdGhpcy5wcmlvcml0eXF1ZXVlLnB1c2goW2RpcywgY3VyWzFdICsgMSwgaSAtIDEsIGpdKTsKICAgICAgICAgICAgICB0aGlzLnBhdGhzW2kgLSAxXVtqXSA9IFtpLCBqXTsKICAgICAgICAgICAgfQogICAgICAgICAgfQoKICAgICAgICAgIGlmIChqID4gMCkgewogICAgICAgICAgICBjb25zb2xlLmxvZygyKTsKCiAgICAgICAgICAgIGlmIChjdXJbMV0gKyAxIDwgdGhpcy5zY29yZXNbaV1baiAtIDFdICYmIHRoaXMuZ3JpZFtpXVtqIC0gMV0gIT0gMSkgewogICAgICAgICAgICAgIGRpcyA9IHRoaXMuZ2V0ZGlzdGFuY2UoW2ksIGogLSAxXSk7CiAgICAgICAgICAgICAgdGhpcy5zY29yZXNbaV1baiAtIDFdID0gY3VyWzFdICsgMTsKICAgICAgICAgICAgICB0aGlzLnByaW9yaXR5cXVldWUucHVzaChbZGlzLCBjdXJbMV0gKyAxLCBpLCBqIC0gMV0pOwogICAgICAgICAgICAgIHRoaXMucGF0aHNbaV1baiAtIDFdID0gW2ksIGpdOwogICAgICAgICAgICB9CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKGkgPCB0aGlzLmdyaWQubGVuZ3RoIC0gMSkgewogICAgICAgICAgICBjb25zb2xlLmxvZygzKTsKCiAgICAgICAgICAgIGlmIChjdXJbMV0gKyAxIDwgdGhpcy5zY29yZXNbaSArIDFdW2pdICYmIHRoaXMuZ3JpZFtpICsgMV1bal0gIT0gMSkgewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJIZXJlIik7CiAgICAgICAgICAgICAgZGlzID0gdGhpcy5nZXRkaXN0YW5jZShbaSArIDEsIGpdKTsKICAgICAgICAgICAgICB0aGlzLnNjb3Jlc1tpICsgMV1bal0gPSBjdXJbMV0gKyAxOwogICAgICAgICAgICAgIHRoaXMucHJpb3JpdHlxdWV1ZS5wdXNoKFtkaXMsIGN1clsxXSArIDEsIGkgKyAxLCBqXSk7CiAgICAgICAgICAgICAgdGhpcy5wYXRoc1tpICsgMV1bal0gPSBbaSwgal07CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoaiA8IHRoaXMuZ3JpZC5sZW5ndGggLSAxKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKDQpOwoKICAgICAgICAgICAgaWYgKGN1clsxXSArIDEgPCB0aGlzLnNjb3Jlc1tpXVtqICsgMV0gJiYgdGhpcy5ncmlkW2ldW2ogKyAxXSAhPSAxKSB7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coIkhlcmUiLCB0aGlzLnByaW9yaXR5cXVldWUubGVuZ3RoKTsKICAgICAgICAgICAgICBkaXMgPSB0aGlzLmdldGRpc3RhbmNlKFtpLCBqICsgMV0pOwogICAgICAgICAgICAgIHRoaXMuc2NvcmVzW2ldW2ogKyAxXSA9IGN1clsxXSArIDE7CiAgICAgICAgICAgICAgdGhpcy5wcmlvcml0eXF1ZXVlLnB1c2goW2RpcywgY3VyWzFdICsgMSwgaSwgaiArIDFdKTsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnByaW9yaXR5cXVldWUubGVuZ3RoKTsKICAgICAgICAgICAgICB0aGlzLnBhdGhzW2ldW2ogKyAxXSA9IFtpLCBqXTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"sources":["/home/shankar/algorithm-visualizer/src/views/AStar-pathfinder.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"navv\">\n        <div class=\"brand\">A Star Pathfinding Algorithm Visualizer</div>\n    </div>\n    <div class=\"m-body\">\n        <div class=\"table-class\">\n            <table align=\"center\">\n                <tr\n                    v-for=\"(firstList, firstListIndex) in grid\"\n                    :key=\"firstListIndex\"\n                >\n                    <td\n                        v-for=\"(item, itemIndex) in firstList\"\n                        :key=\"itemIndex\"\n                        :class=\"{\n                            restricted: item == 1,\n                            path: item == 2,\n                            start:\n                                firstListIndex == start[0] &&\n                                itemIndex == start[1],\n                            end:\n                                firstListIndex == end[0] && itemIndex == end[1],\n                        }\"\n                    ></td>\n                </tr>\n            </table>\n\n            <div class=\"btn-class\">\n                <button class=\"btn\" @click=\"fillpathandscore\">\n                    Find Path!\n                </button>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nexport default {\n    name: \"AstarPathfinder\",\n    data() {\n        return {\n            grid: [\n                [0, 0, 0, 1, 0, 0, 1, 0],\n                [0, 0, 1, 0, 0, 0, 0, 0],\n                [1, 0, 0, 1, 1, 0, 1, 0],\n                [0, 1, 0, 1, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 1, 1, 1],\n                [1, 0, 1, 0, 0, 0, 0, 0],\n                [1, 1, 0, 0, 0, 1, 0, 0],\n                [0, 0, 0, 0, 0, 1, 0, 0],\n            ],\n            start: [0, 0],\n            end: [7, 0],\n            priorityqueue: [],\n            scores: [],\n            paths: [],\n        };\n    },\n    methods: {\n        fillpathandscore() {\n            for (var i = 0; i < this.grid.length; i++) {\n                var temp = [];\n                for (var j = 0; j < this.grid[0].length; j++) {\n                    temp.push(5000000);\n                }\n                this.scores.push(temp);\n            }\n            for (i = 0; i < this.grid.length; i++) {\n                temp = [];\n                for (j = 0; j < this.grid[0].length; j++) {\n                    temp.push([null, null]);\n                }\n                this.paths.push(temp);\n            }\n            this.finding();\n        },\n        poppriorityqueue() {\n            var val = this.priorityqueue[0];\n            //console.log(this.priorityqueue);\n            var index = 0;\n            var el;\n            for (var i = 1; i < this.priorityqueue.length; i++) {\n                el = this.priorityqueue[i];\n                if (el[0] < val[0]) {\n                    val = el;\n                    index = i;\n                } else if (el[0] == val[0] && el[1] < val[1]) {\n                    val = el;\n                    index = i;\n                }\n            }\n            this.priorityqueue.splice(index);\n            return val;\n        },\n        backtract() {\n            var i, j;\n            i = this.end[0];\n            j = this.end[1];\n            var ti, tj;\n            this.grid[this.start[0]][this.start[1]] = 2;\n            while (i != this.start[0] && j != this.start[1]) {\n                this.grid[i][j] = 2;\n                ti = this.paths[i][j][0];\n                tj = this.paths[i][j][1];\n                i = ti;\n                j = tj;\n            }\n            this.grid[i][j] = 2;\n        },\n        getdistance(cur) {\n            var a = cur[0];\n            var b = cur[1];\n            var d = 0;\n            if (a > this.end[0]) {\n                d += a - this.end[0];\n            } else {\n                d += this.end[0] - a;\n            }\n\n            if (b > this.end[1]) {\n                d += b - this.end[1];\n            } else {\n                d += this.end[1] - b;\n            }\n            //console.log(a, b, d);\n            return d;\n        },\n        // return Math.abs(a - this.end[0]) + Math.abs(b - this.end[1]);\n        finding() {\n            var initial_distance = this.getdistance(this.start);\n            this.priorityqueue.push([\n                initial_distance,\n                0,\n                this.start[0],\n                this.start[1],\n            ]);\n            var cur;\n            var i, j;\n            var dis;\n            while (this.priorityqueue.length != 0) {\n                cur = this.poppriorityqueue();\n                i = cur[2];\n                j = cur[3];\n                console.log(i, j, this.priorityqueue.length);\n                if (i == this.end[0] && j == this.end[1]) {\n                    this.backtract();\n                    break;\n                }\n                if (this.scores[i][j] < cur[1]) {\n                    continue;\n                } else {\n                    if (i > 0) {\n                        console.log(1);\n\n                        if (\n                            cur[1] + 1 < this.scores[i - 1][j] &&\n                            this.grid[i - 1][j] != 1\n                        ) {\n                            dis = this.getdistance([i - 1, j]);\n                            this.scores[i - 1][j] = cur[1] + 1;\n                            this.priorityqueue.push([\n                                dis,\n                                cur[1] + 1,\n                                i - 1,\n                                j,\n                            ]);\n                            this.paths[i - 1][j] = [i, j];\n                        }\n                    }\n                    if (j > 0) {\n                        console.log(2);\n\n                        if (\n                            cur[1] + 1 < this.scores[i][j - 1] &&\n                            this.grid[i][j - 1] != 1\n                        ) {\n                            dis = this.getdistance([i, j - 1]);\n                            this.scores[i][j - 1] = cur[1] + 1;\n                            this.priorityqueue.push([\n                                dis,\n                                cur[1] + 1,\n                                i,\n                                j - 1,\n                            ]);\n                            this.paths[i][j - 1] = [i, j];\n                        }\n                    }\n\n                    if (i < this.grid.length - 1) {\n                        console.log(3);\n\n                        if (\n                            cur[1] + 1 < this.scores[i + 1][j] &&\n                            this.grid[i + 1][j] != 1\n                        ) {\n                            console.log(\"Here\");\n                            dis = this.getdistance([i + 1, j]);\n                            this.scores[i + 1][j] = cur[1] + 1;\n                            this.priorityqueue.push([\n                                dis,\n                                cur[1] + 1,\n                                i + 1,\n                                j,\n                            ]);\n                            this.paths[i + 1][j] = [i, j];\n                        }\n                    }\n\n                    if (j < this.grid.length - 1) {\n                        console.log(4);\n\n                        if (\n                            cur[1] + 1 < this.scores[i][j + 1] &&\n                            this.grid[i][j + 1] != 1\n                        ) {\n                            console.log(\"Here\", this.priorityqueue.length);\n                            dis = this.getdistance([i, j + 1]);\n                            this.scores[i][j + 1] = cur[1] + 1;\n                            this.priorityqueue.push([\n                                dis,\n                                cur[1] + 1,\n                                i,\n                                j + 1,\n                            ]);\n                            console.log(this.priorityqueue.length);\n                            this.paths[i][j + 1] = [i, j];\n                        }\n                    }\n                }\n            }\n        },\n    },\n};\n</script>\n<style>\n@import url(\"https://fonts.googleapis.com/css2?family=Montserrat&display=swap\");\n.navv {\n    height: 12vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #e9896a;\n}\n.brand {\n    font-size: 50px;\n    color: #424642;\n    font-family: \"Montserrat\";\n}\n.m-body {\n    height: 88vh;\n    background-color: #f8f5f1;\n}\ntable {\n    padding-top: 20px;\n    border-collapse: separate;\n    border-spacing: 0px;\n}\ntd {\n    margin: 0px;\n    padding: 0px;\n    height: 50px;\n    width: 50px;\n    text-align: center;\n    border: 1px solid #222831;\n    font-size: 30px;\n    font-family: \"Montserrat\";\n    font-weight: 500;\n    color: #222831;\n}\n.restricted {\n    background-color: #222831;\n}\n.start {\n    background-color: #28527a;\n}\n.end {\n    background-color: #ef8d32;\n}\n.btn {\n    /* height: 5px;\n    width: 10px; */\n    border: 1px solid #222831;\n    border-radius: 2px;\n    background-color: #222831;\n    color: #f8f5f1;\n    font-family: \"Montserrat\";\n}\n.btn-class {\n    display: flex;\n    justify-content: center;\n    padding-top: 60px;\n}\n.path {\n    background-color: #28527a;\n}\n</style>\n"],"sourceRoot":""}]}