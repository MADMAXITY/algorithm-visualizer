{"remainingRequest":"/home/shankar/algorithm-visualizer/node_modules/babel-loader/lib/index.js!/home/shankar/algorithm-visualizer/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/shankar/algorithm-visualizer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/shankar/algorithm-visualizer/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/shankar/algorithm-visualizer/src/views/AStar-pathfinder.vue?vue&type=template&id=d93c0c02","dependencies":[{"path":"/home/shankar/algorithm-visualizer/src/views/AStar-pathfinder.vue","mtime":1618576308824},{"path":"/home/shankar/algorithm-visualizer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/shankar/algorithm-visualizer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/shankar/algorithm-visualizer/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616796459000},{"path":"/home/shankar/algorithm-visualizer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/shankar/algorithm-visualizer/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCByZW5kZXJMaXN0IGFzIF9yZW5kZXJMaXN0LCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2sgfSBmcm9tICJ2dWUiOwoKdmFyIF9ob2lzdGVkXzEgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJkaXYiLCB7CiAgY2xhc3M6ICJuYXZ2Igp9LCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiZGl2IiwgewogIGNsYXNzOiAiYnJhbmQiCn0sICJBIFN0YXIgUGF0aGZpbmRpbmcgQWxnb3JpdGhtIFZpc3VhbGl6ZXIiKV0sIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8yID0gewogIGNsYXNzOiAibS1ib2R5Igp9Owp2YXIgX2hvaXN0ZWRfMyA9IHsKICBjbGFzczogInRhYmxlLWNsYXNzIgp9Owp2YXIgX2hvaXN0ZWRfNCA9IHsKICBhbGlnbjogImNlbnRlciIKfTsKdmFyIF9ob2lzdGVkXzUgPSB7CiAgY2xhc3M6ICJidG4tY2xhc3MiCn07CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9GcmFnbWVudCwgbnVsbCwgW19ob2lzdGVkXzEsIF9jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMiwgW19jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMywgW19jcmVhdGVWTm9kZSgidGFibGUiLCBfaG9pc3RlZF80LCBbKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KCRkYXRhLmdyaWQsIGZ1bmN0aW9uIChmaXJzdExpc3QsIGZpcnN0TGlzdEluZGV4KSB7CiAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soInRyIiwgewogICAgICBrZXk6IGZpcnN0TGlzdEluZGV4CiAgICB9LCBbKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KGZpcnN0TGlzdCwgZnVuY3Rpb24gKGl0ZW0sIGl0ZW1JbmRleCkgewogICAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soInRkIiwgewogICAgICAgIGtleTogaXRlbUluZGV4LAogICAgICAgIGNsYXNzOiB7CiAgICAgICAgICByZXN0cmljdGVkOiBpdGVtID09IDEsCiAgICAgICAgICBwYXRoOiBpdGVtID09IDIsCiAgICAgICAgICBzdGFydDogZmlyc3RMaXN0SW5kZXggPT0gJGRhdGEuc3RhcnRbMF0gJiYgaXRlbUluZGV4ID09ICRkYXRhLnN0YXJ0WzFdLAogICAgICAgICAgZW5kOiBmaXJzdExpc3RJbmRleCA9PSAkZGF0YS5lbmRbMF0gJiYgaXRlbUluZGV4ID09ICRkYXRhLmVuZFsxXQogICAgICAgIH0KICAgICAgfSwgbnVsbCwgMgogICAgICAvKiBDTEFTUyAqLwogICAgICApOwogICAgfSksIDEyOAogICAgLyogS0VZRURfRlJBR01FTlQgKi8KICAgICkpXSk7CiAgfSksIDEyOAogIC8qIEtFWUVEX0ZSQUdNRU5UICovCiAgKSldKSwgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF81LCBbX2NyZWF0ZVZOb2RlKCJidXR0b24iLCB7CiAgICBjbGFzczogImJ0biIsCiAgICBvbkNsaWNrOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLmZpbGxwYXRoYW5kc2NvcmUgJiYgJG9wdGlvbnMuZmlsbHBhdGhhbmRzY29yZS5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0pCiAgfSwgIiBGaW5kIFBhdGghICIpXSldKV0pXSwgNjQKICAvKiBTVEFCTEVfRlJBR01FTlQgKi8KICApOwp9"},{"version":3,"sources":["/home/shankar/algorithm-visualizer/src/views/AStar-pathfinder.vue"],"names":[],"mappings":";;8BACI,YAAA,CAEM,KAFN,EAEM;AAFD,EAAA,KAAK,EAAC;AAEL,CAFN,EAAiB,C,aACb,YAAA,CAAgE,KAAhE,EAAgE;AAA3D,EAAA,KAAK,EAAC;AAAqD,CAAhE,EAAmB,yCAAnB,CADa,CAAjB,E;;AAAA,C;;;AAGK,EAAA,KAAK,EAAC;;;AACF,EAAA,KAAK,EAAC;;;AACA,EAAA,KAAK,EAAC;;;AAqBR,EAAA,KAAK,EAAC;;;sDA1BnB,U,EAGA,YAAA,CA6BM,KA7BN,EAAA,UAAA,EA6BM,CA5BF,YAAA,CA2BM,KA3BN,EAAA,UAAA,EA2BM,CA1BF,YAAA,CAmBQ,OAnBR,EAAA,UAAA,EAmBQ,E,kBAlBJ,YAAA,CAiBK,SAjBL,EAiBK,IAjBL,EAiBK,WAAA,CAhBqC,KAAA,CAAA,IAgBrC,EAhByC,UAAlC,SAAkC,EAAvB,cAAuB,EAAT;yBADrC,YAAA,CAiBK,IAjBL,EAiBK;AAfA,MAAA,GAAG,EAAE;AAeL,KAjBL,EAEwB,E,kBAEpB,YAAA,CAYM,SAZN,EAYM,IAZN,EAYM,WAAA,CAX0B,SAW1B,EAXmC,UAA7B,IAA6B,EAAvB,SAAuB,EAAd;2BAD3B,YAAA,CAYM,IAZN,EAYM;AAVD,QAAA,GAAG,EAAE,SAUJ;AATD,QAAA,KAAK,EAAA;sBAA4C,IAAI,IAAA,CAAhD;gBAAyF,IAAI,IAAA,CAA7F;iBAAuK,cAAc,IAAI,KAAA,CAAA,KAAA,CAAK,CAAL,CAAlB,IAA8D,SAAS,IAAI,KAAA,CAAA,KAAA,CAAK,CAAL,CAAlP;eAA6T,cAAc,IAAI,KAAA,CAAA,GAAA,CAAG,CAAH,CAAlB,IAA4B,SAAS,IAAI,KAAA,CAAA,GAAA,CAAG,CAAH;AAAtW;AASJ,OAZN,E,IAAA,E;;AAAA,O;KAYM,CAZN,E;;AAAA,KAFoB,EAFxB,C;GAiBK,CAjBL,E;;AAAA,GAkBI,EAnBR,CA0BE,EALF,YAAA,CAIM,KAJN,EAAA,UAAA,EAIM,CAHF,YAAA,CAES,QAFT,EAES;AAFD,IAAA,KAAK,EAAC,KAEL;AAFY,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,gBAAA,IAAA,QAAA,CAAA,gBAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAEjB,GAFT,EAA8C,cAA9C,CAGE,CAJN,CAKE,CA3BN,CA4BE,CA7BN,C","sourcesContent":["<template>\n    <div class=\"navv\">\n        <div class=\"brand\">A Star Pathfinding Algorithm Visualizer</div>\n    </div>\n    <div class=\"m-body\">\n        <div class=\"table-class\">\n            <table align=\"center\">\n                <tr\n                    v-for=\"(firstList, firstListIndex) in grid\"\n                    :key=\"firstListIndex\"\n                >\n                    <td\n                        v-for=\"(item, itemIndex) in firstList\"\n                        :key=\"itemIndex\"\n                        :class=\"{\n                            restricted: item == 1,\n                            path: item == 2,\n                            start:\n                                firstListIndex == start[0] &&\n                                itemIndex == start[1],\n                            end:\n                                firstListIndex == end[0] && itemIndex == end[1],\n                        }\"\n                    ></td>\n                </tr>\n            </table>\n\n            <div class=\"btn-class\">\n                <button class=\"btn\" @click=\"fillpathandscore\">\n                    Find Path!\n                </button>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nexport default {\n    name: \"AstarPathfinder\",\n    data() {\n        return {\n            grid: [\n                [0, 0, 0, 1, 0, 0, 1, 0],\n                [0, 0, 1, 0, 0, 0, 0, 0],\n                [1, 0, 0, 1, 1, 0, 1, 0],\n                [0, 1, 0, 1, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 1, 1, 1],\n                [1, 0, 1, 0, 0, 0, 0, 0],\n                [1, 1, 0, 0, 0, 1, 0, 0],\n                [0, 0, 0, 0, 0, 1, 0, 0],\n            ],\n            start: [0, 0],\n            end: [7, 0],\n            priorityqueue: [],\n            scores: [],\n            paths: [],\n        };\n    },\n    methods: {\n        fillpathandscore() {\n            for (var i = 0; i < this.grid.length; i++) {\n                var temp = [];\n                for (var j = 0; j < this.grid[0].length; j++) {\n                    temp.push(5000000);\n                }\n                this.scores.push(temp);\n            }\n            for (i = 0; i < this.grid.length; i++) {\n                temp = [];\n                for (j = 0; j < this.grid[0].length; j++) {\n                    temp.push([null, null]);\n                }\n                this.paths.push(temp);\n            }\n            this.finding();\n        },\n        poppriorityqueue() {\n            var val = this.priorityqueue[0];\n            //console.log(this.priorityqueue);\n            var index = 0;\n            var el;\n            for (var i = 1; i < this.priorityqueue.length; i++) {\n                el = this.priorityqueue[i];\n                if (el[0] < val[0]) {\n                    val = el;\n                    index = i;\n                } else if (el[0] == val[0] && el[1] < val[1]) {\n                    val = el;\n                    index = i;\n                }\n            }\n            this.priorityqueue.splice(index);\n            return val;\n        },\n        backtract() {\n            var i, j;\n            i = this.end[0];\n            j = this.end[1];\n            var ti, tj;\n            this.grid[this.start[0]][this.start[1]] = 2;\n            while (i != this.start[0] && j != this.start[1]) {\n                this.grid[i][j] = 2;\n                ti = this.paths[i][j][0];\n                tj = this.paths[i][j][1];\n                i = ti;\n                j = tj;\n            }\n            this.grid[i][j] = 2;\n        },\n        getdistance(cur) {\n            var a = cur[0];\n            var b = cur[1];\n            var d = 0;\n            if (a > this.end[0]) {\n                d += a - this.end[0];\n            } else {\n                d += this.end[0] - a;\n            }\n\n            if (b > this.end[1]) {\n                d += b - this.end[1];\n            } else {\n                d += this.end[1] - b;\n            }\n            //console.log(a, b, d);\n            return d;\n        },\n        // return Math.abs(a - this.end[0]) + Math.abs(b - this.end[1]);\n        finding() {\n            var initial_distance = this.getdistance(this.start);\n            this.priorityqueue.push([\n                initial_distance,\n                0,\n                this.start[0],\n                this.start[1],\n            ]);\n            var cur;\n            var i, j;\n            var dis;\n            while (this.priorityqueue.length != 0) {\n                cur = this.poppriorityqueue();\n                i = cur[2];\n                j = cur[3];\n                console.log(i, j, this.priorityqueue.length);\n                if (i == this.end[0] && j == this.end[1]) {\n                    this.backtract();\n                    break;\n                }\n                if (this.scores[i][j] < cur[1]) {\n                    continue;\n                } else {\n                    if (i > 0) {\n                        console.log(1);\n\n                        if (\n                            cur[1] + 1 < this.scores[i - 1][j] &&\n                            this.grid[i - 1][j] != 1\n                        ) {\n                            dis = this.getdistance([i - 1, j]);\n                            this.scores[i - 1][j] = cur[1] + 1;\n                            this.priorityqueue.push([\n                                dis,\n                                cur[1] + 1,\n                                i - 1,\n                                j,\n                            ]);\n                            this.paths[i - 1][j] = [i, j];\n                        }\n                    }\n                    if (j > 0) {\n                        console.log(2);\n\n                        if (\n                            cur[1] + 1 < this.scores[i][j - 1] &&\n                            this.grid[i][j - 1] != 1\n                        ) {\n                            dis = this.getdistance([i, j - 1]);\n                            this.scores[i][j - 1] = cur[1] + 1;\n                            this.priorityqueue.push([\n                                dis,\n                                cur[1] + 1,\n                                i,\n                                j - 1,\n                            ]);\n                            this.paths[i][j - 1] = [i, j];\n                        }\n                    }\n\n                    if (i < this.grid.length - 1) {\n                        console.log(3);\n\n                        if (\n                            cur[1] + 1 < this.scores[i + 1][j] &&\n                            this.grid[i + 1][j] != 1\n                        ) {\n                            console.log(\"Here\");\n                            dis = this.getdistance([i + 1, j]);\n                            this.scores[i + 1][j] = cur[1] + 1;\n                            this.priorityqueue.push([\n                                dis,\n                                cur[1] + 1,\n                                i + 1,\n                                j,\n                            ]);\n                            this.paths[i + 1][j] = [i, j];\n                        }\n                    }\n\n                    if (j < this.grid.length - 1) {\n                        console.log(4);\n\n                        if (\n                            cur[1] + 1 < this.scores[i][j + 1] &&\n                            this.grid[i][j + 1] != 1\n                        ) {\n                            console.log(\"Here\", this.priorityqueue.length);\n                            dis = this.getdistance([i, j + 1]);\n                            this.scores[i][j + 1] = cur[1] + 1;\n                            this.priorityqueue.push([\n                                dis,\n                                cur[1] + 1,\n                                i,\n                                j + 1,\n                            ]);\n                            console.log(this.priorityqueue.length);\n                            this.paths[i][j + 1] = [i, j];\n                        }\n                    }\n                }\n            }\n        },\n    },\n};\n</script>\n<style>\n@import url(\"https://fonts.googleapis.com/css2?family=Montserrat&display=swap\");\n.navv {\n    height: 12vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #e9896a;\n}\n.brand {\n    font-size: 50px;\n    color: #424642;\n    font-family: \"Montserrat\";\n}\n.m-body {\n    height: 88vh;\n    background-color: #f8f5f1;\n}\ntable {\n    padding-top: 20px;\n    border-collapse: separate;\n    border-spacing: 0px;\n}\ntd {\n    margin: 0px;\n    padding: 0px;\n    height: 50px;\n    width: 50px;\n    text-align: center;\n    border: 1px solid #222831;\n    font-size: 30px;\n    font-family: \"Montserrat\";\n    font-weight: 500;\n    color: #222831;\n}\n.restricted {\n    background-color: #222831;\n}\n.start {\n    background-color: #28527a;\n}\n.end {\n    background-color: #ef8d32;\n}\n.btn {\n    /* height: 5px;\n    width: 10px; */\n    border: 1px solid #222831;\n    border-radius: 2px;\n    background-color: #222831;\n    color: #f8f5f1;\n    font-family: \"Montserrat\";\n}\n.btn-class {\n    display: flex;\n    justify-content: center;\n    padding-top: 60px;\n}\n.path {\n    background-color: #28527a;\n}\n</style>\n"],"sourceRoot":""}]}