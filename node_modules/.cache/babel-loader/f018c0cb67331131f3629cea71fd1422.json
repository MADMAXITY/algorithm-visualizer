{"remainingRequest":"/home/shankar/algorithm-visualizer/node_modules/babel-loader/lib/index.js!/home/shankar/algorithm-visualizer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/shankar/algorithm-visualizer/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/shankar/algorithm-visualizer/src/views/AStar-pathfinder.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/shankar/algorithm-visualizer/src/views/AStar-pathfinder.vue","mtime":1618837483417},{"path":"/home/shankar/algorithm-visualizer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/shankar/algorithm-visualizer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/shankar/algorithm-visualizer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/shankar/algorithm-visualizer/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/shankar/algorithm-visualizer/src/views/AStar-pathfinder.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"navv\">\n        <div class=\"brand\">A Star Pathfinding Algorithm Visualizer</div>\n    </div>\n    <div class=\"m-body\">\n        <div class=\"table-class\">\n            <table align=\"center\">\n                <tr\n                    v-for=\"(firstList, firstListIndex) in grid\"\n                    :key=\"firstListIndex\"\n                >\n                    <td\n                        v-for=\"(item, itemIndex) in firstList\"\n                        :key=\"itemIndex\"\n                        :class=\"{\n                            restricted: item == 1,\n                            path: item == 2,\n                            start:\n                                firstListIndex == start[0] &&\n                                itemIndex == start[1],\n                            end:\n                                firstListIndex == end[0] && itemIndex == end[1],\n                            visiting: item == 5,\n                        }\"\n                    ></td>\n                </tr>\n            </table>\n\n            <div class=\"btn-class\">\n                <button class=\"btn\" @click=\"fillpathandscore\">\n                    Find Path!\n                </button>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nexport default {\n    name: \"AstarPathfinder\",\n    data() {\n        return {\n            grid: [\n                [0, 0, 0, 1, 0, 0, 1, 0],\n                [0, 0, 1, 0, 0, 0, 0, 0],\n                [1, 0, 0, 1, 1, 0, 1, 0],\n                [0, 1, 0, 1, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 1, 1, 1],\n                [1, 0, 1, 0, 0, 0, 0, 0],\n                [1, 1, 0, 0, 0, 1, 0, 0],\n                [0, 0, 0, 0, 0, 1, 0, 0],\n            ],\n            start: [0, 0],\n            end: [7, 0],\n            priorityqueue: [],\n            scores: [],\n            paths: [],\n        };\n    },\n    methods: {\n        fillpathandscore() {\n            for (var i = 0; i < this.grid.length; i++) {\n                var temp = [];\n                for (var j = 0; j < this.grid[0].length; j++) {\n                    temp.push(5000000);\n                }\n                this.scores.push(temp);\n            }\n            for (i = 0; i < this.grid.length; i++) {\n                temp = [];\n                for (j = 0; j < this.grid[0].length; j++) {\n                    temp.push([null, null]);\n                }\n                this.paths.push(temp);\n            }\n            this.finding();\n        },\n        arrayRemove(arr, value) {\n            return arr.filter(function(ele) {\n                return ele != value;\n            });\n        },\n        timeout(ms) {\n            return new Promise((resolve) => setTimeout(resolve, ms));\n        },\n        poppriorityqueue() {\n            var val = this.priorityqueue[0];\n            //console.log(this.priorityqueue);\n            //var index = 0;\n            var el;\n            for (var i = 1; i < this.priorityqueue.length; i++) {\n                el = this.priorityqueue[i];\n                if (el[0] < val[0]) {\n                    val = el;\n                    //index = i;\n                } else if (el[0] == val[0] && el[1] < val[1]) {\n                    val = el;\n                    //index = i;\n                }\n            }\n            //this.priorityqueue.splice(index);\n            this.priorityqueue = this.arrayRemove(this.priorityqueue, val);\n            return val;\n        },\n        async backtract() {\n            var i, j;\n            i = this.end[0];\n            j = this.end[1];\n            var ti, tj;\n            this.grid[this.start[0]][this.start[1]] = 2;\n            while (i != this.start[0] || j != this.start[1]) {\n                this.grid[i][j] = 2;\n                await this.timeout(100);\n                ti = this.paths[i][j][0];\n                tj = this.paths[i][j][1];\n                i = ti;\n                j = tj;\n            }\n            this.grid[i][j] = 2;\n        },\n        getdistance(cur) {\n            var a = cur[0];\n            var b = cur[1];\n            var d = 0;\n            d =\n                (a - this.end[0]) * (a - this.end[0]) +\n                (b - this.end[1]) * (b - this.end[1]);\n\n            return d;\n        },\n        // return Math.abs(a - this.end[0]) + Math.abs(b - this.end[1]);\n        async finding() {\n            var initial_distance = this.getdistance(this.start);\n            this.priorityqueue.push([\n                initial_distance,\n                0,\n                this.start[0],\n                this.start[1],\n            ]);\n            var cur;\n            var i, j;\n            var dis;\n            while (this.priorityqueue.length != 0) {\n                cur = this.poppriorityqueue();\n                i = cur[2];\n                j = cur[3];\n                this.grid[i][j] = 5;\n                await this.timeout(100);\n                //console.log(i, j, this.priorityqueue.length);\n                if (i == this.end[0] && j == this.end[1]) {\n                    this.backtract();\n                    break;\n                }\n                if (this.scores[i][j] < cur[1]) {\n                    continue;\n                } else {\n                    if (i > 0) {\n                        if (\n                            cur[1] + 1 < this.scores[i - 1][j] &&\n                            this.grid[i - 1][j] != 1\n                        ) {\n                            dis = this.getdistance([i - 1, j]);\n                            this.scores[i - 1][j] = cur[1] + 1;\n                            this.priorityqueue.push([\n                                dis,\n                                cur[1] + 1,\n                                i - 1,\n                                j,\n                            ]);\n                            this.paths[i - 1][j] = [i, j];\n                        }\n                    }\n                    if (j > 0) {\n                        if (\n                            cur[1] + 1 < this.scores[i][j - 1] &&\n                            this.grid[i][j - 1] != 1\n                        ) {\n                            dis = this.getdistance([i, j - 1]);\n                            this.scores[i][j - 1] = cur[1] + 1;\n                            this.priorityqueue.push([\n                                dis,\n                                cur[1] + 1,\n                                i,\n                                j - 1,\n                            ]);\n                            this.paths[i][j - 1] = [i, j];\n                        }\n                    }\n\n                    if (i < this.grid.length - 1) {\n                        if (\n                            cur[1] + 1 < this.scores[i + 1][j] &&\n                            this.grid[i + 1][j] != 1\n                        ) {\n                            dis = this.getdistance([i + 1, j]);\n                            this.scores[i + 1][j] = cur[1] + 1;\n                            this.priorityqueue.push([\n                                dis,\n                                cur[1] + 1,\n                                i + 1,\n                                j,\n                            ]);\n\n                            this.paths[i + 1][j] = [i, j];\n                        }\n                    }\n\n                    if (j < this.grid[0].length - 1) {\n                        if (\n                            cur[1] + 1 < this.scores[i][j + 1] &&\n                            this.grid[i][j + 1] != 1\n                        ) {\n                            dis = this.getdistance([i, j + 1]);\n                            this.scores[i][j + 1] = cur[1] + 1;\n\n                            this.priorityqueue.push([\n                                dis,\n                                cur[1] + 1,\n                                i,\n                                j + 1,\n                            ]);\n\n                            this.paths[i][j + 1] = [i, j];\n                        }\n                    }\n                }\n            }\n        },\n    },\n};\n</script>\n<style>\n@import url(\"https://fonts.googleapis.com/css2?family=Montserrat&display=swap\");\n.navv {\n    height: 12vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #e9896a;\n}\n.brand {\n    font-size: 50px;\n    color: #424642;\n    font-family: \"Montserrat\";\n}\n.m-body {\n    height: 88vh;\n    background-color: #f8f5f1;\n}\ntable {\n    padding-top: 20px;\n    border-collapse: separate;\n    border-spacing: 0px;\n}\ntd {\n    margin: 0px;\n    padding: 0px;\n    height: 50px;\n    width: 50px;\n    text-align: center;\n    border: 1px solid #222831;\n    font-size: 30px;\n    font-family: \"Montserrat\";\n    font-weight: 500;\n    color: #222831;\n}\n.restricted {\n    background-color: #222831;\n}\n.start {\n    background-color: #28527a;\n}\n.end {\n    background-color: #d44000;\n}\n.btn {\n    /* height: 5px;\n    width: 10px; */\n    border: 1px solid #222831;\n    border-radius: 2px;\n    background-color: #222831;\n    color: #f8f5f1;\n    font-family: \"Montserrat\";\n}\n.btn-class {\n    display: flex;\n    justify-content: center;\n    padding-top: 60px;\n}\n.path {\n    background-color: #81b214;\n}\n.visiting {\n    background-color: #c15050;\n}\n</style>\n"],"sourceRoot":""}]}