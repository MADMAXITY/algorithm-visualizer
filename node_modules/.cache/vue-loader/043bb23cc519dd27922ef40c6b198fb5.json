{"remainingRequest":"/home/shankar/algorithm-visualizer/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/shankar/algorithm-visualizer/src/views/AStar-pathfinder.vue?vue&type=style&index=0&id=d93c0c02&lang=css","dependencies":[{"path":"/home/shankar/algorithm-visualizer/src/views/AStar-pathfinder.vue","mtime":1618576308824},{"path":"/home/shankar/algorithm-visualizer/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/shankar/algorithm-visualizer/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616796459000},{"path":"/home/shankar/algorithm-visualizer/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/shankar/algorithm-visualizer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/shankar/algorithm-visualizer/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgdXJsKCJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU1vbnRzZXJyYXQmZGlzcGxheT1zd2FwIik7Ci5uYXZ2IHsKICAgIGhlaWdodDogMTJ2aDsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTk4OTZhOwp9Ci5icmFuZCB7CiAgICBmb250LXNpemU6IDUwcHg7CiAgICBjb2xvcjogIzQyNDY0MjsKICAgIGZvbnQtZmFtaWx5OiAiTW9udHNlcnJhdCI7Cn0KLm0tYm9keSB7CiAgICBoZWlnaHQ6IDg4dmg7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmNWYxOwp9CnRhYmxlIHsKICAgIHBhZGRpbmctdG9wOiAyMHB4OwogICAgYm9yZGVyLWNvbGxhcHNlOiBzZXBhcmF0ZTsKICAgIGJvcmRlci1zcGFjaW5nOiAwcHg7Cn0KdGQgewogICAgbWFyZ2luOiAwcHg7CiAgICBwYWRkaW5nOiAwcHg7CiAgICBoZWlnaHQ6IDUwcHg7CiAgICB3aWR0aDogNTBweDsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIGJvcmRlcjogMXB4IHNvbGlkICMyMjI4MzE7CiAgICBmb250LXNpemU6IDMwcHg7CiAgICBmb250LWZhbWlseTogIk1vbnRzZXJyYXQiOwogICAgZm9udC13ZWlnaHQ6IDUwMDsKICAgIGNvbG9yOiAjMjIyODMxOwp9Ci5yZXN0cmljdGVkIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICMyMjI4MzE7Cn0KLnN0YXJ0IHsKICAgIGJhY2tncm91bmQtY29sb3I6ICMyODUyN2E7Cn0KLmVuZCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWY4ZDMyOwp9Ci5idG4gewogICAgLyogaGVpZ2h0OiA1cHg7CiAgICB3aWR0aDogMTBweDsgKi8KICAgIGJvcmRlcjogMXB4IHNvbGlkICMyMjI4MzE7CiAgICBib3JkZXItcmFkaXVzOiAycHg7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjIyODMxOwogICAgY29sb3I6ICNmOGY1ZjE7CiAgICBmb250LWZhbWlseTogIk1vbnRzZXJyYXQiOwp9Ci5idG4tY2xhc3MgewogICAgZGlzcGxheTogZmxleDsKICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwogICAgcGFkZGluZy10b3A6IDYwcHg7Cn0KLnBhdGggewogICAgYmFja2dyb3VuZC1jb2xvcjogIzI4NTI3YTsKfQo="},{"version":3,"sources":["/home/shankar/algorithm-visualizer/src/views/AStar-pathfinder.vue"],"names":[],"mappings":"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","file":"/home/shankar/algorithm-visualizer/src/views/AStar-pathfinder.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"navv\">\n        <div class=\"brand\">A Star Pathfinding Algorithm Visualizer</div>\n    </div>\n    <div class=\"m-body\">\n        <div class=\"table-class\">\n            <table align=\"center\">\n                <tr\n                    v-for=\"(firstList, firstListIndex) in grid\"\n                    :key=\"firstListIndex\"\n                >\n                    <td\n                        v-for=\"(item, itemIndex) in firstList\"\n                        :key=\"itemIndex\"\n                        :class=\"{\n                            restricted: item == 1,\n                            path: item == 2,\n                            start:\n                                firstListIndex == start[0] &&\n                                itemIndex == start[1],\n                            end:\n                                firstListIndex == end[0] && itemIndex == end[1],\n                        }\"\n                    ></td>\n                </tr>\n            </table>\n\n            <div class=\"btn-class\">\n                <button class=\"btn\" @click=\"fillpathandscore\">\n                    Find Path!\n                </button>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nexport default {\n    name: \"AstarPathfinder\",\n    data() {\n        return {\n            grid: [\n                [0, 0, 0, 1, 0, 0, 1, 0],\n                [0, 0, 1, 0, 0, 0, 0, 0],\n                [1, 0, 0, 1, 1, 0, 1, 0],\n                [0, 1, 0, 1, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 1, 1, 1],\n                [1, 0, 1, 0, 0, 0, 0, 0],\n                [1, 1, 0, 0, 0, 1, 0, 0],\n                [0, 0, 0, 0, 0, 1, 0, 0],\n            ],\n            start: [0, 0],\n            end: [7, 0],\n            priorityqueue: [],\n            scores: [],\n            paths: [],\n        };\n    },\n    methods: {\n        fillpathandscore() {\n            for (var i = 0; i < this.grid.length; i++) {\n                var temp = [];\n                for (var j = 0; j < this.grid[0].length; j++) {\n                    temp.push(5000000);\n                }\n                this.scores.push(temp);\n            }\n            for (i = 0; i < this.grid.length; i++) {\n                temp = [];\n                for (j = 0; j < this.grid[0].length; j++) {\n                    temp.push([null, null]);\n                }\n                this.paths.push(temp);\n            }\n            this.finding();\n        },\n        poppriorityqueue() {\n            var val = this.priorityqueue[0];\n            //console.log(this.priorityqueue);\n            var index = 0;\n            var el;\n            for (var i = 1; i < this.priorityqueue.length; i++) {\n                el = this.priorityqueue[i];\n                if (el[0] < val[0]) {\n                    val = el;\n                    index = i;\n                } else if (el[0] == val[0] && el[1] < val[1]) {\n                    val = el;\n                    index = i;\n                }\n            }\n            this.priorityqueue.splice(index);\n            return val;\n        },\n        backtract() {\n            var i, j;\n            i = this.end[0];\n            j = this.end[1];\n            var ti, tj;\n            this.grid[this.start[0]][this.start[1]] = 2;\n            while (i != this.start[0] && j != this.start[1]) {\n                this.grid[i][j] = 2;\n                ti = this.paths[i][j][0];\n                tj = this.paths[i][j][1];\n                i = ti;\n                j = tj;\n            }\n            this.grid[i][j] = 2;\n        },\n        getdistance(cur) {\n            var a = cur[0];\n            var b = cur[1];\n            var d = 0;\n            if (a > this.end[0]) {\n                d += a - this.end[0];\n            } else {\n                d += this.end[0] - a;\n            }\n\n            if (b > this.end[1]) {\n                d += b - this.end[1];\n            } else {\n                d += this.end[1] - b;\n            }\n            //console.log(a, b, d);\n            return d;\n        },\n        // return Math.abs(a - this.end[0]) + Math.abs(b - this.end[1]);\n        finding() {\n            var initial_distance = this.getdistance(this.start);\n            this.priorityqueue.push([\n                initial_distance,\n                0,\n                this.start[0],\n                this.start[1],\n            ]);\n            var cur;\n            var i, j;\n            var dis;\n            while (this.priorityqueue.length != 0) {\n                cur = this.poppriorityqueue();\n                i = cur[2];\n                j = cur[3];\n                console.log(i, j, this.priorityqueue.length);\n                if (i == this.end[0] && j == this.end[1]) {\n                    this.backtract();\n                    break;\n                }\n                if (this.scores[i][j] < cur[1]) {\n                    continue;\n                } else {\n                    if (i > 0) {\n                        console.log(1);\n\n                        if (\n                            cur[1] + 1 < this.scores[i - 1][j] &&\n                            this.grid[i - 1][j] != 1\n                        ) {\n                            dis = this.getdistance([i - 1, j]);\n                            this.scores[i - 1][j] = cur[1] + 1;\n                            this.priorityqueue.push([\n                                dis,\n                                cur[1] + 1,\n                                i - 1,\n                                j,\n                            ]);\n                            this.paths[i - 1][j] = [i, j];\n                        }\n                    }\n                    if (j > 0) {\n                        console.log(2);\n\n                        if (\n                            cur[1] + 1 < this.scores[i][j - 1] &&\n                            this.grid[i][j - 1] != 1\n                        ) {\n                            dis = this.getdistance([i, j - 1]);\n                            this.scores[i][j - 1] = cur[1] + 1;\n                            this.priorityqueue.push([\n                                dis,\n                                cur[1] + 1,\n                                i,\n                                j - 1,\n                            ]);\n                            this.paths[i][j - 1] = [i, j];\n                        }\n                    }\n\n                    if (i < this.grid.length - 1) {\n                        console.log(3);\n\n                        if (\n                            cur[1] + 1 < this.scores[i + 1][j] &&\n                            this.grid[i + 1][j] != 1\n                        ) {\n                            console.log(\"Here\");\n                            dis = this.getdistance([i + 1, j]);\n                            this.scores[i + 1][j] = cur[1] + 1;\n                            this.priorityqueue.push([\n                                dis,\n                                cur[1] + 1,\n                                i + 1,\n                                j,\n                            ]);\n                            this.paths[i + 1][j] = [i, j];\n                        }\n                    }\n\n                    if (j < this.grid.length - 1) {\n                        console.log(4);\n\n                        if (\n                            cur[1] + 1 < this.scores[i][j + 1] &&\n                            this.grid[i][j + 1] != 1\n                        ) {\n                            console.log(\"Here\", this.priorityqueue.length);\n                            dis = this.getdistance([i, j + 1]);\n                            this.scores[i][j + 1] = cur[1] + 1;\n                            this.priorityqueue.push([\n                                dis,\n                                cur[1] + 1,\n                                i,\n                                j + 1,\n                            ]);\n                            console.log(this.priorityqueue.length);\n                            this.paths[i][j + 1] = [i, j];\n                        }\n                    }\n                }\n            }\n        },\n    },\n};\n</script>\n<style>\n@import url(\"https://fonts.googleapis.com/css2?family=Montserrat&display=swap\");\n.navv {\n    height: 12vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #e9896a;\n}\n.brand {\n    font-size: 50px;\n    color: #424642;\n    font-family: \"Montserrat\";\n}\n.m-body {\n    height: 88vh;\n    background-color: #f8f5f1;\n}\ntable {\n    padding-top: 20px;\n    border-collapse: separate;\n    border-spacing: 0px;\n}\ntd {\n    margin: 0px;\n    padding: 0px;\n    height: 50px;\n    width: 50px;\n    text-align: center;\n    border: 1px solid #222831;\n    font-size: 30px;\n    font-family: \"Montserrat\";\n    font-weight: 500;\n    color: #222831;\n}\n.restricted {\n    background-color: #222831;\n}\n.start {\n    background-color: #28527a;\n}\n.end {\n    background-color: #ef8d32;\n}\n.btn {\n    /* height: 5px;\n    width: 10px; */\n    border: 1px solid #222831;\n    border-radius: 2px;\n    background-color: #222831;\n    color: #f8f5f1;\n    font-family: \"Montserrat\";\n}\n.btn-class {\n    display: flex;\n    justify-content: center;\n    padding-top: 60px;\n}\n.path {\n    background-color: #28527a;\n}\n</style>\n"]}]}